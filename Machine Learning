// Copyright (c) 2019 ml5
//
// This software is released under the MIT License.
// https://opensource.org/licenses/MIT

/* ===
ml5 Example
Webcam Image Classification using a pre-trained customized model and p5.js
This example uses p5 preload function to create the classifier
=== */

// Classifier Variable
let classifier;
var state = 0;
// Model URL
let imageModelURL = 'https://teachablemachine.withgoogle.com/models/Ihmz-7QW/model.json';

// Video
let video;
let flippedVideo;
// To store the classification
let label = "";

let Class0 = 'Starbucks';
let Class1 = 'Hermione';
let C0 = 0;
let C1 = 0;

// Load the model first
function preload() {
  classifier = ml5.imageClassifier(imageModelURL);
}

function setup() {
  createCanvas(520, 260);
  // Create the video
  video = createCapture(VIDEO);
  video.size(320, 240);
  video.hide();

  flippedVideo = ml5.flipImage(video)
  // Start classifying
  classifyVideo();
}

function draw() {
  background(0);
  // Draw the video
  image(flippedVideo, 0, 0);

  // Draw the label
  fill(255);
  textSize(16);
  //textAlign(CENTER);
  text(label, width / 4, height - 4);
  text(Class0, width-170, 80);
  text(Class1, width-170, 120);
  text('Empty', width-170, 160);
  
  text(C0, width - 70, 80);
  text(C1, width - 70, 120);
}

// Get a prediction for the current video frame
function classifyVideo() {
  flippedVideo = ml5.flipImage(video)
  classifier.classify(flippedVideo, gotResult);
}

// When we get a result
function gotResult(error, results) {
  // If there is an error
  if (error) {
    console.error(error);
    return;
  }
  // The results are in an array ordered by confidence.
  // console.log(results[0]);
  label = results[0].label;
  // Classifiy again!
    
  classifyVideo();
  print(results);
  
 if (label == "Empty"){
   state = 1;
 }
  
 if (state ==1 && label == "Starbucks"){
 C0++;
   state = 0;
 }
  
  if (state ==1 && label == "Hermione"){
 C1++;
   state = 0;
 }

}
